<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.StatMapper">
    <select id="statUser" resultType="map">
        select
        substr(add_time,1,10) as day,
        count(distinct id) as users
        from litemall_user
        group by substr(add_time,1,10)
    </select>
    <select id="statOrder" resultType="map">
        select
        substr(add_time,1,10) as day,
        count(id) as orders,
        count(distinct user_id) as customers,
        sum(actual_price) as amount,
        round(sum(actual_price)/count(distinct user_id),2) as pcr
        from litemall_order
        where order_status in(401,402)
        group by substr(add_time,1,10)
    </select>
    <select id="statGoods" resultType="map">
        select
        substr(add_time,1, 10) as day,
        count(distinct order_id) as orders,
        sum(number) as products,
        sum(number*price) as amount
        from litemall_order_goods
        group by substr(add_time,1, 10)
    </select>
    <select id="statComplex" resultType="map">
        select
        substr(cal.datelist,1, 10) as day,
        ifnull(count(distinct og.order_id), 0) as orders,
        ifnull(sum(number), 0) as products,
        ifnull(sum(number*og.price), 0) as amount,
        ifnull(sum(gv.views), 0) as goodsViews,
        ifnull(sum(if(g.is_virtual='true',gv.views,0)), 0) as virtualGoodsViews,
        ifnull(sum(if(g.is_virtual!='true',gv.views,0)), 0) as nonVirtualGoodsViews,
        ifnull(pv.views, 0) as platformViews
        from litemall_calendar cal
        left join litemall_order_goods og on substr(og.add_time,1,10) = substr(cal.datelist,1,10)
        left join litemall_goods_view gv on substr(gv.add_time,1,10) = substr(cal.datelist,1,10)
        left join litemall_goods g on gv.goods_id = g.id
        left join litemall_platform_view pv on substr(pv.add_time,1,10) = substr(cal.datelist,1,10)
        <choose>
            <when test="days != null">
                where date(datelist) between DATE_SUB(CURDATE(), INTERVAL #{days} DAY) and CURDATE()
                group by substr(cal.datelist,1, 10)
            </when>
            <when test="start != null and end != null">
                where date(datelist) between #{start} and #{end}
                group by substr(cal.datelist,1, 10)
            </when>
        </choose>
    </select>
</mapper>
